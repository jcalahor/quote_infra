version: '3'
services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=my-password
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
  zookeeper:
      image: confluentinc/cp-zookeeper:latest
      container_name: zookeeper
      environment:
        ZOOKEEPER_SERVER_ID: 1
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      ports:
        - "2181:2181"
      networks:
        - quote_net
  kafka:
      image: confluentinc/cp-kafka:latest
      container_name: broker
      ports:
        - "9092:9092"
        - "19092:19092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:19092
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:19092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      depends_on:
        - zookeeper
      networks:
        - quote_net
      command: [ "sh", "-c", "sleep 10 && /etc/confluent/docker/run" ]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.0
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false  # Disable security (HTTPS and authentication)
      - cluster.routing.allocation.enable=none  # Disable shard allocation
      - cluster.routing.allocation.disk.watermark.low=5gb  # Set low disk watermark
      - cluster.routing.allocation.disk.watermark.high=3gb  # Set high disk watermark
      - cluster.routing.allocation.disk.watermark.flood_stage=2gb  # Set flood stage watermark
    ports:
      - "9200:9200"
    networks:
      - quote_net
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=50s"]
      interval: 30s
      retries: 3

  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.0
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_STARTUP_RETRY_INTERVAL=10
      - xpack.reporting.kibanaServer.hostname=localhost  # Set the Kibana server hostname for reporting

    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - quote_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601"]
      interval: 30s
      retries: 3

networks:
    quote_net:
      driver: bridge
      ipam:
        driver: default
        config:
        - subnet: 172.60.0.0/16
          gateway: 172.60.0.1

volumes:
  esdata:
    driver: local